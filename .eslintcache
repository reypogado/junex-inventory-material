[{"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\utils\\constants.js":"1","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\utils\\utils.js":"2","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\dashboard\\Dashboard.js":"3","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\entries\\NewEntry.js":"4","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\components\\MainDrawer.js":"5","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\sizes\\Sizes.js":"6","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\reports\\Reports.js":"7","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\App.js":"8","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\categories.js":"9","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\products\\Products.js":"10","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\reportWebVitals.js":"11","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\sizes.js":"12","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\products.js":"13","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\Contexts.js":"14","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\CategoryContext.js":"15","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\SizeContext.js":"16","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\categories\\Categories.js":"17","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\ProductsContext.js":"18","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\AuthContext.js":"19","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\index.js":"20","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\auth\\Login.js":"21","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\auth\\Register.js":"22","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\Entries.js":"23","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\home\\Home.js":"24","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\auth.js":"25"},{"size":226,"mtime":1610200186411,"results":"26","hashOfConfig":"27"},{"size":2659,"mtime":1610194165454,"results":"28","hashOfConfig":"27"},{"size":172,"mtime":1606616299674,"results":"29","hashOfConfig":"27"},{"size":6422,"mtime":1610284498675,"results":"30","hashOfConfig":"27"},{"size":7171,"mtime":1607154413683,"results":"31","hashOfConfig":"27"},{"size":1587,"mtime":1607156671081,"results":"32","hashOfConfig":"27"},{"size":166,"mtime":1607227003905,"results":"33","hashOfConfig":"27"},{"size":646,"mtime":1607236785774,"results":"34","hashOfConfig":"27"},{"size":1908,"mtime":1607155289296,"results":"35","hashOfConfig":"27"},{"size":2334,"mtime":1610203702174,"results":"36","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"27"},{"size":1855,"mtime":1607160811453,"results":"38","hashOfConfig":"27"},{"size":693,"mtime":1607232563483,"results":"39","hashOfConfig":"27"},{"size":822,"mtime":1610264550026,"results":"40","hashOfConfig":"27"},{"size":1939,"mtime":1607155321218,"results":"41","hashOfConfig":"27"},{"size":1692,"mtime":1607156460970,"results":"42","hashOfConfig":"27"},{"size":1645,"mtime":1607232416689,"results":"43","hashOfConfig":"27"},{"size":799,"mtime":1607228993092,"results":"44","hashOfConfig":"27"},{"size":1288,"mtime":1607250287536,"results":"45","hashOfConfig":"27"},{"size":539,"mtime":1606625457764,"results":"46","hashOfConfig":"27"},{"size":4028,"mtime":1607236975039,"results":"47","hashOfConfig":"27"},{"size":4676,"mtime":1607258318758,"results":"48","hashOfConfig":"27"},{"size":2219,"mtime":1610280733934,"results":"49","hashOfConfig":"27"},{"size":2149,"mtime":1607236549277,"results":"50","hashOfConfig":"27"},{"size":1375,"mtime":1607250320641,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w46vyk",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\utils\\constants.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\utils\\utils.js",[],["115","116"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\dashboard\\Dashboard.js",[],["117","118"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\entries\\NewEntry.js",["119","120","121","122","123","124"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\components\\MainDrawer.js",["125","126","127","128","129","130","131"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\n\r\nfunction MainDrawer(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    var history = useHistory();\r\n\r\n\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('userData')\r\n        history.replace('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        var path = props.pathName.split(\"/\").pop()\r\n        if (path === '') setSelectedTab(0)\r\n        if (path === 'Categories') setSelectedTab(1)\r\n        if (path === 'Sizes') setSelectedTab(2)\r\n        if (path === 'Products') setSelectedTab(3)\r\n        if (path === 'Entries') setSelectedTab(4)\r\n        if (path === 'Reports') setSelectedTab(5)\r\n\r\n    }, []);\r\n\r\n    const drawerIcons = [<DashboardIcon />, <ListAltIcon />, <BubbleChartIcon />, <AssignmentIcon />, <CreateIcon />, <AssessmentIcon />]\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            {/* <Divider /> */}\r\n            <List>\r\n                {['Dashboard', 'Categories', 'Sizes', 'Products', 'Entries', 'Reports'].map((text, index) => (\r\n                    <ListItem button key={text} component={Link} to={text == 'Dashboard' ? `/home` : `/home/${text}`} onClick={() => setSelectedTab(index)} selected={selectedTab == index}>\r\n                        <ListItemIcon>{drawerIcons[index]}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                        {/* <div style={{ display: 'flex', padding: 5, borderRadius: 40, backgroundColor: 'red', justifyContent: 'center', alignItems: 'center', width: 20, height: 20 }}><text style={{ color: 'white', fontSize: 10 }}>1</text></div> */}\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n\r\n\r\n            <div style={{ flex: 1, flexGrow: 1, alignItems: 'center', justifyContent: 'center', alignSelf: 'stretch', width: 20, backgroundColor: 'red' }}></div>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar style={{ justifyContent: 'space-between' }}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Responsive drawer\r\n          </Typography>\r\n                    <Button variant=\"contained\" onClick={() => logOut()} endIcon={<ExitToAppIcon />}>\r\n                        Logout\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nMainDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default MainDrawer;","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\sizes\\Sizes.js",["132","133","134"],"import MaterialTable from 'material-table'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { SizeContext } from '../../context/SizeContext'\r\nimport { tableIcons, tablePageSizeoptions } from '../../utils/utils'\r\n\r\nfunction Sizes(props) {\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'ID', field: 'id', editable: 'never' },\r\n        { title: 'Size Name', field: 'name' },\r\n        { title: 'Date Created', field: 'created_at', editable: 'never' },\r\n    ])\r\n\r\n\r\n    const {fetchSizes, sizes, addSizes, updateSizes, sizeLoading } = useContext(SizeContext)\r\n\r\n\r\n    return (\r\n        <MaterialTable\r\n            isLoading={sizeLoading}\r\n            icons={tableIcons}\r\n            options={tablePageSizeoptions}\r\n            title=\"Product Sizes\"\r\n            columns={columns}\r\n            data={sizes}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        console.log(newData)\r\n                        await addSizes(newData)\r\n                        resolve();\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        await updateSizes(oldData, newData)\r\n                        resolve();\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        reject()\r\n                    })\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Sizes\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\reports\\Reports.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\App.js",["135"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Contexts from './context/Contexts';\n\n//pages\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Home from './pages/home/Home';\nimport { headers } from './utils/utils';\n\nfunction App() {\n  window.$name = 'tester'\n  return (\n    <Contexts>\n      <BrowserRouter>\n        <Switch >\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route path=\"/home\" component={Home} />\n        </Switch >\n      </BrowserRouter>\n    </Contexts>\n\n  );\n}\n\nexport default App;\n",["136","137"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\categories.js",[],["138","139"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\products\\Products.js",["140","141","142"],"import MaterialTable from 'material-table'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { tableIcons, tablePageSizeoptions } from '../../utils/utils'\r\n\r\n//contexts\r\nimport { CategoryContext } from '../../context/CategoryContext'\r\nimport { ProductContext } from '../../context/ProductsContext'\r\nimport { SizeContext } from '../../context/SizeContext'\r\n\r\nfunction Products(props) {\r\n\r\n    const { products, productsLoading } = useContext(ProductContext)\r\n    const { sizes } = useContext(SizeContext)\r\n    const { categories } = useContext(CategoryContext)\r\n\r\n    const sizeLookup = {}\r\n    const categoryLookup = {}\r\n\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    useEffect(() => {\r\n        sizes.map(size => {\r\n            sizeLookup[size.id] = size.name\r\n        })\r\n        console.log(sizeLookup);\r\n\r\n        categories.map(category => {\r\n            categoryLookup[category.id] = category.name\r\n        })\r\n        console.log(categoryLookup)\r\n\r\n        setColumns([\r\n            { title: \"ID\", field: \"id\", editable: \"never\" },\r\n            { title: \"Product Name\", field: \"name\" },\r\n            { title: \"Size\", field: \"size\", lookup: sizeLookup },\r\n            { title: \"Category\", field: \"category\", lookup: categoryLookup },\r\n            { title: \"Price\", field: \"price\" },\r\n            { title: \"Date Created\", field: \"created_at\", editable: \"never\" },\r\n          ]);\r\n\r\n    }, [products])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MaterialTable\r\n            isLoading={productsLoading}\r\n            icons={tableIcons}\r\n            options={tablePageSizeoptions}\r\n            title=\"Products\"\r\n            columns={columns}\r\n            data={products}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        console.log(newData)\r\n                        reject()\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        reject()\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        reject()\r\n                    })\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Products\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\reportWebVitals.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\sizes.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\products.js",[],["143","144"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\Contexts.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\CategoryContext.js",["145"],"import React, { createContext, useState } from 'react';\r\nimport { FetchCategories, AddCategory, UpdateCategory } from '../api/categories';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\n\r\n\r\nfunction CategoryContextProvider(props) {\r\n    const [categories, setCategory] = useState([])\r\n    const [categoryLoading, setCategoryLoading] = useState(true)\r\n\r\n\r\n    const fetchCategories = async () => {\r\n        setCategoryLoading(true)\r\n        let data = await FetchCategories();\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            setCategory(data)\r\n        }\r\n    }\r\n\r\n    const addCategories = async (newData) => {\r\n        setCategoryLoading(true)\r\n        let data = await AddCategory(newData);\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            data.name = newData['name']\r\n            console.log(data)\r\n            setCategory([...categories, data])\r\n        } else {\r\n            alert('Something went wrong adding category. Make sure category name is unique')\r\n        }\r\n    }\r\n\r\n    const updateCategories = async (oldData, newData) => {\r\n        setCategoryLoading(true)\r\n        let data = await UpdateCategory(newData);\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            var prevState = [...categories];\r\n            var index = prevState.indexOf(oldData)\r\n            prevState[index] = newData\r\n            setCategory(prevState)\r\n        } else {\r\n            alert('Something went wrong updating category. Make sure category name is unique')\r\n        }\r\n    }\r\n\r\n    const addCategoryData = async (data) => {\r\n        setCategory(data)\r\n    }\r\n\r\n    return (\r\n        <CategoryContext.Provider value={{\r\n            categories, fetchCategories, addCategories,\r\n            categoryLoading, updateCategories\r\n        }}>\r\n            {props.children}\r\n        </CategoryContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoryContextProvider\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\SizeContext.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\categories\\Categories.js",["146","147"],"import MaterialTable from 'material-table'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { CategoryContext } from '../../context/CategoryContext'\r\nimport { tableIcons, tablePageSizeoptions } from '../../utils/utils'\r\n\r\nfunction Categories(props) {\r\n\r\n    const [columns, setColumns] = useState([\r\n        { title: 'ID', field: 'id', editable: 'never' },\r\n        { title: 'Category Name', field: 'name' },\r\n        { title: 'Date Created', field: 'created_at', editable: 'never' },\r\n    ])\r\n\r\n\r\n    const { categories, addCategories, updateCategories, categoryLoading } = useContext(CategoryContext)\r\n\r\n\r\n    return (\r\n        <MaterialTable\r\n            isLoading={categoryLoading}\r\n            icons={tableIcons}\r\n            options={tablePageSizeoptions}\r\n            title=\"Product Categories\"\r\n            columns={columns}\r\n            data={categories}\r\n            editable={{\r\n                onRowAdd: newData =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        console.log(newData)\r\n                        await addCategories(newData)\r\n                        resolve();\r\n                    }),\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        await updateCategories(oldData, newData)\r\n                        resolve();\r\n                    }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise(async (resolve, reject) => {\r\n                        reject()\r\n                    })\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\ProductsContext.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\AuthContext.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\index.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\auth\\Login.js",["148","149","150","151","152","153","154","155","156","157"],"import { Avatar, Backdrop, Box, Button, CircularProgress, Container, CssBaseline, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserLogin } from '../../api/auth';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\n\r\nfunction Login() {\r\n    var history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [code, setCode] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [loginStat, setLoginStat] = useState(false);\r\n\r\n    // const {loginUser, setUserData } = useContext(AuthContext)\r\n\r\n    const { loginUser, user, setUserData } = useContext(AuthContext)\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setLoginStat(false)\r\n        setLoading(true)\r\n        var stat = await loginUser(code)\r\n        setLoginStat(!stat)\r\n        setLoading(false)\r\n        if (stat) {\r\n            history.push('/home')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (code == \"\") setLoginStat(false)\r\n\r\n        var prevData = localStorage.getItem('userData');\r\n\r\n        if (prevData) {\r\n            setUserData(prevData)\r\n            history.replace('/home')\r\n        }\r\n    }, [code])\r\n\r\n    const classes = useStyles();\r\n\r\n    if (!localStorage.getItem('userData'))\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Enter Code\r\n                 </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            error={loginStat}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            type=\"password\"\r\n                            name=\"code\"\r\n                            label=\"Code\"\r\n                            id={loginStat ? \"outlined-error-helper-text\" : \"\"}\r\n                            onChange={(val) => setCode(val.target.value)}\r\n                            helperText={loginStat ? \"Login Failed\" : \"\"}\r\n                            value={code}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Submit\r\n                    </Button>\r\n                        <Button \r\n                            onClick={()=>{history.push('/register')}}\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                        >\r\n                            Register\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n                {/* <Box mt={8}> */}\r\n                {/* <Copyright /> */}\r\n                {/* </Box> */}\r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </Container>\r\n        )\r\n\r\n    return <div/>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default Login;\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\auth\\Register.js",[],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\context\\Entries.js",["158","159","160","161","162"],"E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\pages\\home\\Home.js",["163","164","165","166","167","168","169"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport MainDrawer from '../../components/MainDrawer'\r\nimport { CategoryContext } from '../../context/CategoryContext'\r\nimport { ProductContext } from '../../context/ProductsContext'\r\nimport { SizeContext } from '../../context/SizeContext'\r\nimport { headers } from '../../utils/utils'\r\nimport Categories from '../categories/Categories'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport NewEntry from '../entries/NewEntry'\r\nimport Products from '../products/Products'\r\nimport Reports from '../reports/Reports'\r\nimport Sizes from '../sizes/Sizes'\r\n\r\nfunction Home(props) {\r\n    var history = useHistory();\r\n\r\n    const { window, location } = props;\r\n    const { pathname } = props.location;\r\n    var prevData;\r\n\r\n    const { isLogin, setLogin } = useState(false)\r\n\r\n    const { fetchCategories } = useContext(CategoryContext)\r\n    const { fetchSizes } = useContext(SizeContext)\r\n    const { fetchProducts } = useContext(ProductContext)\r\n\r\n\r\n    useEffect(() => {\r\n        Promise.all([fetchCategories(), fetchSizes()]).then((values) => {\r\n            fetchProducts()\r\n        });\r\n    }, [])\r\n\r\n    if (!localStorage.getItem('userData')) {\r\n        return (\r\n            <button onClick={() => history.replace('/')}>\r\n                Please Login to continue\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <MainDrawer pathName={pathname} >\r\n                <Switch>\r\n                    <Route path=\"/home\" exact component={Dashboard} />\r\n                    <Route path=\"/home/Categories\" component={Categories} />\r\n                    <Route path=\"/home/Sizes\" component={Sizes} />\r\n                    <Route path=\"/home/Products\" component={Products} />\r\n                    <Route path=\"/home/Entries\" component={NewEntry} />\r\n                    <Route path=\"/home/Reports\" component={Reports} />\r\n                    {/* <Route path=\"/home/Grocery\" component={Grocery} /> */}\r\n                </Switch>\r\n            </MainDrawer>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Home\r\n","E:\\Projects\\Codeplay\\junex inventory system\\junex-inventory\\src\\api\\auth.js",["170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":40,"nodeType":"179","messageId":"180","endLine":1,"endColumn":48},{"ruleId":"177","severity":1,"message":"181","line":2,"column":56,"nodeType":"179","messageId":"180","endLine":2,"endColumn":73},{"ruleId":"177","severity":1,"message":"182","line":10,"column":23,"nodeType":"179","messageId":"180","endLine":10,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":26,"column":36,"nodeType":"185","messageId":"186","endLine":26,"endColumn":38},{"ruleId":"187","severity":1,"message":"188","line":51,"column":8,"nodeType":"189","endLine":51,"endColumn":18,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":110,"column":105,"nodeType":"193","messageId":"194","endLine":110,"endColumn":107},{"ruleId":"177","severity":1,"message":"195","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"196","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":17},{"ruleId":"177","severity":1,"message":"197","line":14,"column":8,"nodeType":"179","messageId":"180","endLine":14,"endColumn":16},{"ruleId":"177","severity":1,"message":"198","line":22,"column":8,"nodeType":"179","messageId":"180","endLine":22,"endColumn":16},{"ruleId":"187","severity":1,"message":"199","line":66,"column":8,"nodeType":"189","endLine":66,"endColumn":10,"suggestions":"200"},{"ruleId":"191","severity":1,"message":"192","line":75,"column":75,"nodeType":"193","messageId":"194","endLine":75,"endColumn":77},{"ruleId":"191","severity":1,"message":"192","line":75,"column":179,"nodeType":"193","messageId":"194","endLine":75,"endColumn":181},{"ruleId":"177","severity":1,"message":"201","line":2,"column":29,"nodeType":"179","messageId":"180","endLine":2,"endColumn":38},{"ruleId":"177","severity":1,"message":"202","line":8,"column":21,"nodeType":"179","messageId":"180","endLine":8,"endColumn":31},{"ruleId":"177","severity":1,"message":"203","line":15,"column":12,"nodeType":"179","messageId":"180","endLine":15,"endColumn":22},{"ruleId":"177","severity":1,"message":"204","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":17},{"ruleId":"171","replacedBy":"205"},{"ruleId":"173","replacedBy":"206"},{"ruleId":"171","replacedBy":"207"},{"ruleId":"173","replacedBy":"208"},{"ruleId":"183","severity":1,"message":"184","line":23,"column":24,"nodeType":"185","messageId":"186","endLine":23,"endColumn":26},{"ruleId":"183","severity":1,"message":"184","line":28,"column":33,"nodeType":"185","messageId":"186","endLine":28,"endColumn":35},{"ruleId":"187","severity":1,"message":"209","line":42,"column":8,"nodeType":"189","endLine":42,"endColumn":18,"suggestions":"210"},{"ruleId":"171","replacedBy":"211"},{"ruleId":"173","replacedBy":"212"},{"ruleId":"177","severity":1,"message":"213","line":49,"column":11,"nodeType":"179","messageId":"180","endLine":49,"endColumn":26},{"ruleId":"177","severity":1,"message":"201","line":2,"column":29,"nodeType":"179","messageId":"180","endLine":2,"endColumn":38},{"ruleId":"177","severity":1,"message":"202","line":8,"column":21,"nodeType":"179","messageId":"180","endLine":8,"endColumn":31},{"ruleId":"177","severity":1,"message":"214","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"215","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":31},{"ruleId":"177","severity":1,"message":"216","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"217","line":11,"column":12,"nodeType":"179","messageId":"180","endLine":11,"endColumn":16},{"ruleId":"177","severity":1,"message":"218","line":11,"column":18,"nodeType":"179","messageId":"180","endLine":11,"endColumn":25},{"ruleId":"177","severity":1,"message":"219","line":12,"column":12,"nodeType":"179","messageId":"180","endLine":12,"endColumn":20},{"ruleId":"177","severity":1,"message":"220","line":12,"column":22,"nodeType":"179","messageId":"180","endLine":12,"endColumn":33},{"ruleId":"177","severity":1,"message":"221","line":20,"column":24,"nodeType":"179","messageId":"180","endLine":20,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":35,"column":18,"nodeType":"193","messageId":"194","endLine":35,"endColumn":20},{"ruleId":"187","severity":1,"message":"222","line":43,"column":8,"nodeType":"189","endLine":43,"endColumn":14,"suggestions":"223"},{"ruleId":"191","severity":1,"message":"224","line":25,"column":19,"nodeType":"193","messageId":"194","endLine":25,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":35,"column":17,"nodeType":"179","messageId":"227","endLine":35,"endColumn":35},{"ruleId":"191","severity":1,"message":"192","line":52,"column":33,"nodeType":"193","messageId":"194","endLine":52,"endColumn":35},{"ruleId":"228","severity":1,"message":"229","line":54,"column":11,"nodeType":"230","messageId":"231","endLine":57,"endColumn":10},{"ruleId":"177","severity":1,"message":"232","line":60,"column":11,"nodeType":"179","messageId":"180","endLine":60,"endColumn":26},{"ruleId":"177","severity":1,"message":"204","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":17},{"ruleId":"177","severity":1,"message":"233","line":18,"column":13,"nodeType":"179","messageId":"180","endLine":18,"endColumn":19},{"ruleId":"177","severity":1,"message":"234","line":18,"column":21,"nodeType":"179","messageId":"180","endLine":18,"endColumn":29},{"ruleId":"177","severity":1,"message":"235","line":20,"column":9,"nodeType":"179","messageId":"180","endLine":20,"endColumn":17},{"ruleId":"177","severity":1,"message":"236","line":22,"column":13,"nodeType":"179","messageId":"180","endLine":22,"endColumn":20},{"ruleId":"177","severity":1,"message":"237","line":22,"column":22,"nodeType":"179","messageId":"180","endLine":22,"endColumn":30},{"ruleId":"187","severity":1,"message":"238","line":33,"column":8,"nodeType":"189","endLine":33,"endColumn":10,"suggestions":"239"},{"ruleId":"177","severity":1,"message":"204","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":17},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'DialogContentText' is defined but never used.","'productsLoading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocalEntries'. Either include it or remove the dependency array.","ArrayExpression",["242"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Divider' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'ListIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.pathName'. Either include it or remove the dependency array.",["243"],"'useEffect' is defined but never used.","'setColumns' is assigned a value but never used.","'fetchSizes' is assigned a value but never used.","'headers' is defined but never used.",["240"],["241"],["240"],["241"],"React Hook useEffect has missing dependencies: 'categories', 'categoryLookup', 'sizeLookup', and 'sizes'. Either include them or remove the dependency array.",["244"],["240"],["241"],"'addCategoryData' is assigned a value but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'UserLogin' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'setUserData'. Either include them or remove the dependency array.",["245"],"Expected '!==' and instead saw '!='.","no-redeclare","'localEntriesHolder' is already defined.","redeclared","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'getSavedEntries' is assigned a value but never used.","'window' is assigned a value but never used.","'location' is assigned a value but never used.","'prevData' is defined but never used.","'isLogin' is assigned a value but never used.","'setLogin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCategories', 'fetchProducts', and 'fetchSizes'. Either include them or remove the dependency array.",["246"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [getLocalEntries, products]",{"range":"257","text":"258"},"Update the dependencies array to be: [props.pathName]",{"range":"259","text":"260"},"Update the dependencies array to be: [categories, categoryLookup, products, sizeLookup, sizes]",{"range":"261","text":"262"},"Update the dependencies array to be: [code, history, setUserData]",{"range":"263","text":"264"},"Update the dependencies array to be: [fetchCategories, fetchProducts, fetchSizes]",{"range":"265","text":"266"},[2058,2068],"[getLocalEntries, products]",[2411,2413],"[props.pathName]",[1427,1437],"[categories, categoryLookup, products, sizeLookup, sizes]",[1355,1361],"[code, history, setUserData]",[1217,1219],"[fetchCategories, fetchProducts, fetchSizes]"]